apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
//apply plugin: 'kotlin-android-extensions'

def configuration = rootProject.ext.configuration

android {
    compileSdkVersion configuration.compileSdkVersion

    flavorDimensions "build"
    productFlavors {
        dev {
            dimension "build"
            applicationIdSuffix ".dev"
            minSdkVersion configuration.devMinSdkVersion
        }
        prod {
            dimension "build"
            minSdkVersion configuration.minSdkVersion
        }
    }

    defaultConfig {
        applicationId configuration.package
        minSdkVersion configuration.minSdkVersion
        targetSdkVersion configuration.targetSdkVersion
        versionCode configuration.versionCode
        versionName configuration.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    afterEvaluate {
        if (project.plugins.hasPlugin("kotlin-kapt")) {
            kapt {
                javacOptions {
                    option("-Xmaxerrs", 100000)
                }
            }
        }
    }

    kapt {
        javacOptions {
            option("-Xmaxerrs", 500)
        }
    }

//    androidExtensions {
//        experimental = true
//    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0-alpha04'
    implementation 'com.google.android.material:material:1.1.0-alpha10'
    implementation 'com.android.support:design:28.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "com.android.support:support-compat:28.0.0"

    implementation "com.google.dagger:dagger-android:2.42"
    implementation "com.google.dagger:dagger-android-support:2.42"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0-alpha05'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-alpha05'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.2.0-alpha05'
    implementation 'com.google.code.gson:gson:2.8.5'

    implementation "androidx.room:room-runtime:2.4.2"
    implementation "androidx.room:room-rxjava2:2.4.2"

    implementation "android.arch.work:work-runtime-ktx:1.0.1"
    implementation "android.arch.work:work-rxjava2:1.0.1"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.andrognito.patternlockview:patternlockview:1.0.0'

    implementation 'com.daimajia.easing:library:2.0@aar'
    implementation 'com.daimajia.androidanimations:library:2.3@aar'

    implementation 'com.wei.android.lib:fingerprintidentify:1.2.6'
    implementation 'com.github.iammert:beaver:1.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'

    implementation 'com.facebook.conceal:conceal:2.0.2'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    kapt 'com.google.dagger:dagger-compiler:2.42'
    kapt 'com.google.dagger:dagger-android-processor:2.42'
    kapt "androidx.lifecycle:lifecycle-compiler:2.2.0-alpha05"
    kapt "androidx.room:room-compiler:2.4.2"

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}

apply plugin: 'com.google.gms.google-services'